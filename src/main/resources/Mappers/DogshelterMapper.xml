<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.finalproject.DAO.DogshelterMapper">
  <resultMap id="BaseResultMap" type="com.example.finalproject.pojo.Dogshelter">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="zip" jdbcType="VARCHAR" property="zip" />
    <result column="latitude" jdbcType="REAL" property="latitude" />
    <result column="longtitude" jdbcType="REAL" property="longtitude" />
  </resultMap>
  <sql id="Base_Column_List">
    id, address, email, city, name, phone, state, zip, latitude, longtitude
  </sql>
  <select id="top5states" resultType="java.util.HashMap">
    select ds.state as 'key', count(da.id) as 'value'
    from dogbreeds db, dogadoption da, dogshelter ds
    where ds.id = da.organization_id and (da.primary_breed = db.breed or da.secondary_breed = db.breed) and db.group = 'Herding Group' and da.status = 'adopted'
    group by ds.state
    order by count(da.id) desc
  </select>
  <select id="mostshelter" resultType="java.util.HashMap">
    select state, count(id) shelternum
    from dogshelter
    group by state
    order by shelternum desc
  </select>
  <select id="mostdogs" resultType="java.util.HashMap">
    select ds.name name, count(da.id) adoptablenum
    from dogadoption da, dogshelter ds
    where da.organization_id = ds.id and da.status = 'adoptable'
    group by ds.id, ds.name
    order by adoptablenum desc
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from dogshelter
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.finalproject.pojo.Dogshelter">
    insert into dogshelter (id, address, email, city, name, phone, state, zip, latitude, longtitude)
    values (#{id,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{zip,jdbcType=VARCHAR}, #{latitude,jdbcType=REAL}, 
      #{longtitude,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.example.finalproject.pojo.Dogshelter">
    insert into dogshelter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="zip != null">
        zip,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longtitude != null">
        longtitude,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="zip != null">
        #{zip,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=REAL},
      </if>
      <if test="longtitude != null">
        #{longtitude,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.finalproject.pojo.Dogshelter">
    update dogshelter
    <set>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="zip != null">
        zip = #{zip,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=REAL},
      </if>
      <if test="longtitude != null">
        longtitude = #{longtitude,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.finalproject.pojo.Dogshelter">
    update dogshelter
    set address = #{address,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
      zip = #{zip,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=REAL},
      longtitude = #{longtitude,jdbcType=REAL}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>